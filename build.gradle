plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

jib {
    from {
        image = "eclipse-temurin:21"
        platforms {
            platform {
                architecture = "arm64"
                os = "linux"
            }
        }
    }
    to {
        image = "${{ secrets.DOCKER_ID}}/${project.name}"
        tags = ["${project.version.toString().toLowerCase()}"]
    }
    container {
        jvmFlags = ['-XX:+UseContainerSupport', '-Xms512m', '-Xdebug']
    }
}

jacoco {
    toolVersion = '0.8.8'
}

jacocoTestReport {
    reports {
        // 원하는 리포트를 켜고 끌 수 있다
        html.required.set(true)
        // xml.enabled false // 안해주면 어떻게 되지?
    }
    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            enabled = false

            limit {
                counter = 'LINE' // 'BRANCH' 가 오면 브랜치 커버리지를 의미하게됨
                value = 'COVEREDRATIO'
                minimum = 0.60
            }
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.60
            }
        }
        rule {
            element = 'CLASS'
            enabled = false

//            limit {
//                counter = 'LINE'
//                value = 'COVEREDRATIO'
//                minimum = 0.0
//            }
            // 코드의 라인 수 제한
            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 10
            }

            excludes = ["*.*JdbcRepository"]
        }
    }
}
test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
    }
    finalizedBy 'jacocoTestReport'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
